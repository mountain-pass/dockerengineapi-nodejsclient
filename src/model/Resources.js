/*
 * Docker Engine API
 * The Engine API is an HTTP API served by Docker Engine. It is the API the Docker client uses to communicate with the Engine, so everything the Docker client can do can be done with the API.  Most of the client's commands map directly to API endpoints (e.g. `docker ps` is `GET /containers/json`). The notable exception is running containers, which consists of several API calls.  # Errors  The API uses standard HTTP status codes to indicate the success or failure of the API call. The body of the response will be JSON in the following format:  ``` {   \"message\": \"page not found\" } ```  # Versioning  The API is usually changed in each release, so API calls are versioned to ensure that clients don't break. To lock to a specific version of the API, you prefix the URL with its version, for example, call `/v1.30/info` to use the v1.30 version of the `/info` endpoint. If the API version specified in the URL is not supported by the daemon, a HTTP `400 Bad Request` error message is returned.  If you omit the version-prefix, the current version of the API (v1.41) is used. For example, calling `/info` is the same as calling `/v1.41/info`. Using the API without a version-prefix is deprecated and will be removed in a future release.  Engine releases in the near future should support this version of the API, so your client will continue to work even if it is talking to a newer Engine.  The API uses an open schema model, which means server may add extra properties to responses. Likewise, the server will ignore any extra query parameters and request body properties. When you write clients, you need to ignore additional properties in responses to ensure they do not break when talking to newer daemons.   # Authentication  Authentication for registries is handled client side. The client has to send authentication details to various endpoints that need to communicate with registries, such as `POST /images/(name)/push`. These are sent as `X-Registry-Auth` header as a [base64url encoded](https://tools.ietf.org/html/rfc4648#section-5) (JSON) string with the following structure:  ``` {   \"username\": \"string\",   \"password\": \"string\",   \"email\": \"string\",   \"serveraddress\": \"string\" } ```  The `serveraddress` is a domain/IP without a protocol. Throughout this structure, double quotes are required.  If you have already got an identity token from the [`/auth` endpoint](#operation/SystemAuth), you can just pass this instead of credentials:  ``` {   \"identitytoken\": \"9cbaf023786cd7...\" } ``` 
 *
 * OpenAPI spec version: 1.41
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DeviceMapping', 'model/DeviceRequest', 'model/ResourcesBlkioWeightDevice', 'model/ResourcesUlimits', 'model/ThrottleDevice'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DeviceMapping'), require('./DeviceRequest'), require('./ResourcesBlkioWeightDevice'), require('./ResourcesUlimits'), require('./ThrottleDevice'));
  } else {
    // Browser globals (root is window)
    if (!root.DockerEngineApi) {
      root.DockerEngineApi = {};
    }
    root.DockerEngineApi.Resources = factory(root.DockerEngineApi.ApiClient, root.DockerEngineApi.DeviceMapping, root.DockerEngineApi.DeviceRequest, root.DockerEngineApi.ResourcesBlkioWeightDevice, root.DockerEngineApi.ResourcesUlimits, root.DockerEngineApi.ThrottleDevice);
  }
}(this, function(ApiClient, DeviceMapping, DeviceRequest, ResourcesBlkioWeightDevice, ResourcesUlimits, ThrottleDevice) {
  'use strict';

  /**
   * The Resources model module.
   * @module model/Resources
   * @version 1.41
   */

  /**
   * Constructs a new <code>Resources</code>.
   * A container's resources (cgroups config, ulimits, etc)
   * @alias module:model/Resources
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Resources</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Resources} obj Optional instance to populate.
   * @return {module:model/Resources} The populated <code>Resources</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('CpuShares'))
        obj.cpuShares = ApiClient.convertToType(data['CpuShares'], 'Number');
      if (data.hasOwnProperty('Memory'))
        obj.memory = ApiClient.convertToType(data['Memory'], 'Number');
      if (data.hasOwnProperty('CgroupParent'))
        obj.cgroupParent = ApiClient.convertToType(data['CgroupParent'], 'String');
      if (data.hasOwnProperty('BlkioWeight'))
        obj.blkioWeight = ApiClient.convertToType(data['BlkioWeight'], 'Number');
      if (data.hasOwnProperty('BlkioWeightDevice'))
        obj.blkioWeightDevice = ApiClient.convertToType(data['BlkioWeightDevice'], [ResourcesBlkioWeightDevice]);
      if (data.hasOwnProperty('BlkioDeviceReadBps'))
        obj.blkioDeviceReadBps = ApiClient.convertToType(data['BlkioDeviceReadBps'], [ThrottleDevice]);
      if (data.hasOwnProperty('BlkioDeviceWriteBps'))
        obj.blkioDeviceWriteBps = ApiClient.convertToType(data['BlkioDeviceWriteBps'], [ThrottleDevice]);
      if (data.hasOwnProperty('BlkioDeviceReadIOps'))
        obj.blkioDeviceReadIOps = ApiClient.convertToType(data['BlkioDeviceReadIOps'], [ThrottleDevice]);
      if (data.hasOwnProperty('BlkioDeviceWriteIOps'))
        obj.blkioDeviceWriteIOps = ApiClient.convertToType(data['BlkioDeviceWriteIOps'], [ThrottleDevice]);
      if (data.hasOwnProperty('CpuPeriod'))
        obj.cpuPeriod = ApiClient.convertToType(data['CpuPeriod'], 'Number');
      if (data.hasOwnProperty('CpuQuota'))
        obj.cpuQuota = ApiClient.convertToType(data['CpuQuota'], 'Number');
      if (data.hasOwnProperty('CpuRealtimePeriod'))
        obj.cpuRealtimePeriod = ApiClient.convertToType(data['CpuRealtimePeriod'], 'Number');
      if (data.hasOwnProperty('CpuRealtimeRuntime'))
        obj.cpuRealtimeRuntime = ApiClient.convertToType(data['CpuRealtimeRuntime'], 'Number');
      if (data.hasOwnProperty('CpusetCpus'))
        obj.cpusetCpus = ApiClient.convertToType(data['CpusetCpus'], 'String');
      if (data.hasOwnProperty('CpusetMems'))
        obj.cpusetMems = ApiClient.convertToType(data['CpusetMems'], 'String');
      if (data.hasOwnProperty('Devices'))
        obj.devices = ApiClient.convertToType(data['Devices'], [DeviceMapping]);
      if (data.hasOwnProperty('DeviceCgroupRules'))
        obj.deviceCgroupRules = ApiClient.convertToType(data['DeviceCgroupRules'], ['String']);
      if (data.hasOwnProperty('DeviceRequests'))
        obj.deviceRequests = ApiClient.convertToType(data['DeviceRequests'], [DeviceRequest]);
      if (data.hasOwnProperty('KernelMemory'))
        obj.kernelMemory = ApiClient.convertToType(data['KernelMemory'], 'Number');
      if (data.hasOwnProperty('KernelMemoryTCP'))
        obj.kernelMemoryTCP = ApiClient.convertToType(data['KernelMemoryTCP'], 'Number');
      if (data.hasOwnProperty('MemoryReservation'))
        obj.memoryReservation = ApiClient.convertToType(data['MemoryReservation'], 'Number');
      if (data.hasOwnProperty('MemorySwap'))
        obj.memorySwap = ApiClient.convertToType(data['MemorySwap'], 'Number');
      if (data.hasOwnProperty('MemorySwappiness'))
        obj.memorySwappiness = ApiClient.convertToType(data['MemorySwappiness'], 'Number');
      if (data.hasOwnProperty('NanoCpus'))
        obj.nanoCpus = ApiClient.convertToType(data['NanoCpus'], 'Number');
      if (data.hasOwnProperty('OomKillDisable'))
        obj.oomKillDisable = ApiClient.convertToType(data['OomKillDisable'], 'Boolean');
      if (data.hasOwnProperty('Init'))
        obj.init = ApiClient.convertToType(data['Init'], 'Boolean');
      if (data.hasOwnProperty('PidsLimit'))
        obj.pidsLimit = ApiClient.convertToType(data['PidsLimit'], 'Number');
      if (data.hasOwnProperty('Ulimits'))
        obj.ulimits = ApiClient.convertToType(data['Ulimits'], [ResourcesUlimits]);
      if (data.hasOwnProperty('CpuCount'))
        obj.cpuCount = ApiClient.convertToType(data['CpuCount'], 'Number');
      if (data.hasOwnProperty('CpuPercent'))
        obj.cpuPercent = ApiClient.convertToType(data['CpuPercent'], 'Number');
      if (data.hasOwnProperty('IOMaximumIOps'))
        obj.iOMaximumIOps = ApiClient.convertToType(data['IOMaximumIOps'], 'Number');
      if (data.hasOwnProperty('IOMaximumBandwidth'))
        obj.iOMaximumBandwidth = ApiClient.convertToType(data['IOMaximumBandwidth'], 'Number');
    }
    return obj;
  }

  /**
   * An integer value representing this container's relative CPU weight versus other containers. 
   * @member {Number} cpuShares
   */
  exports.prototype.cpuShares = undefined;

  /**
   * Memory limit in bytes.
   * @member {Number} memory
   * @default 0
   */
  exports.prototype.memory = 0;

  /**
   * Path to `cgroups` under which the container's `cgroup` is created. If the path is not absolute, the path is considered to be relative to the `cgroups` path of the init process. Cgroups are created if they do not already exist. 
   * @member {String} cgroupParent
   */
  exports.prototype.cgroupParent = undefined;

  /**
   * Block IO weight (relative weight).
   * @member {Number} blkioWeight
   */
  exports.prototype.blkioWeight = undefined;

  /**
   * Block IO weight (relative device weight) in the form:  ``` [{\"Path\": \"device_path\", \"Weight\": weight}] ``` 
   * @member {Array.<module:model/ResourcesBlkioWeightDevice>} blkioWeightDevice
   */
  exports.prototype.blkioWeightDevice = undefined;

  /**
   * Limit read rate (bytes per second) from a device, in the form:  ``` [{\"Path\": \"device_path\", \"Rate\": rate}] ``` 
   * @member {Array.<module:model/ThrottleDevice>} blkioDeviceReadBps
   */
  exports.prototype.blkioDeviceReadBps = undefined;

  /**
   * Limit write rate (bytes per second) to a device, in the form:  ``` [{\"Path\": \"device_path\", \"Rate\": rate}] ``` 
   * @member {Array.<module:model/ThrottleDevice>} blkioDeviceWriteBps
   */
  exports.prototype.blkioDeviceWriteBps = undefined;

  /**
   * Limit read rate (IO per second) from a device, in the form:  ``` [{\"Path\": \"device_path\", \"Rate\": rate}] ``` 
   * @member {Array.<module:model/ThrottleDevice>} blkioDeviceReadIOps
   */
  exports.prototype.blkioDeviceReadIOps = undefined;

  /**
   * Limit write rate (IO per second) to a device, in the form:  ``` [{\"Path\": \"device_path\", \"Rate\": rate}] ``` 
   * @member {Array.<module:model/ThrottleDevice>} blkioDeviceWriteIOps
   */
  exports.prototype.blkioDeviceWriteIOps = undefined;

  /**
   * The length of a CPU period in microseconds.
   * @member {Number} cpuPeriod
   */
  exports.prototype.cpuPeriod = undefined;

  /**
   * Microseconds of CPU time that the container can get in a CPU period. 
   * @member {Number} cpuQuota
   */
  exports.prototype.cpuQuota = undefined;

  /**
   * The length of a CPU real-time period in microseconds. Set to 0 to allocate no time allocated to real-time tasks. 
   * @member {Number} cpuRealtimePeriod
   */
  exports.prototype.cpuRealtimePeriod = undefined;

  /**
   * The length of a CPU real-time runtime in microseconds. Set to 0 to allocate no time allocated to real-time tasks. 
   * @member {Number} cpuRealtimeRuntime
   */
  exports.prototype.cpuRealtimeRuntime = undefined;

  /**
   * CPUs in which to allow execution (e.g., `0-3`, `0,1`). 
   * @member {String} cpusetCpus
   */
  exports.prototype.cpusetCpus = undefined;

  /**
   * Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems. 
   * @member {String} cpusetMems
   */
  exports.prototype.cpusetMems = undefined;

  /**
   * A list of devices to add to the container.
   * @member {Array.<module:model/DeviceMapping>} devices
   */
  exports.prototype.devices = undefined;

  /**
   * a list of cgroup rules to apply to the container
   * @member {Array.<String>} deviceCgroupRules
   */
  exports.prototype.deviceCgroupRules = undefined;

  /**
   * A list of requests for devices to be sent to device drivers. 
   * @member {Array.<module:model/DeviceRequest>} deviceRequests
   */
  exports.prototype.deviceRequests = undefined;

  /**
   * Kernel memory limit in bytes.  <p><br /></p>  > **Deprecated**: This field is deprecated as the kernel 5.4 deprecated > `kmem.limit_in_bytes`. 
   * @member {Number} kernelMemory
   */
  exports.prototype.kernelMemory = undefined;

  /**
   * Hard limit for kernel TCP buffer memory (in bytes).
   * @member {Number} kernelMemoryTCP
   */
  exports.prototype.kernelMemoryTCP = undefined;

  /**
   * Memory soft limit in bytes.
   * @member {Number} memoryReservation
   */
  exports.prototype.memoryReservation = undefined;

  /**
   * Total memory limit (memory + swap). Set as `-1` to enable unlimited swap. 
   * @member {Number} memorySwap
   */
  exports.prototype.memorySwap = undefined;

  /**
   * Tune a container's memory swappiness behavior. Accepts an integer between 0 and 100. 
   * @member {Number} memorySwappiness
   */
  exports.prototype.memorySwappiness = undefined;

  /**
   * CPU quota in units of 10<sup>-9</sup> CPUs.
   * @member {Number} nanoCpus
   */
  exports.prototype.nanoCpus = undefined;

  /**
   * Disable OOM Killer for the container.
   * @member {Boolean} oomKillDisable
   */
  exports.prototype.oomKillDisable = undefined;

  /**
   * Run an init inside the container that forwards signals and reaps processes. This field is omitted if empty, and the default (as configured on the daemon) is used. 
   * @member {Boolean} init
   */
  exports.prototype.init = undefined;

  /**
   * Tune a container's PIDs limit. Set `0` or `-1` for unlimited, or `null` to not change. 
   * @member {Number} pidsLimit
   */
  exports.prototype.pidsLimit = undefined;

  /**
   * A list of resource limits to set in the container. For example:  ``` {\"Name\": \"nofile\", \"Soft\": 1024, \"Hard\": 2048} ``` 
   * @member {Array.<module:model/ResourcesUlimits>} ulimits
   */
  exports.prototype.ulimits = undefined;

  /**
   * The number of usable CPUs (Windows only).  On Windows Server containers, the processor resource controls are mutually exclusive. The order of precedence is `CPUCount` first, then `CPUShares`, and `CPUPercent` last. 
   * @member {Number} cpuCount
   */
  exports.prototype.cpuCount = undefined;

  /**
   * The usable percentage of the available CPUs (Windows only).  On Windows Server containers, the processor resource controls are mutually exclusive. The order of precedence is `CPUCount` first, then `CPUShares`, and `CPUPercent` last. 
   * @member {Number} cpuPercent
   */
  exports.prototype.cpuPercent = undefined;

  /**
   * Maximum IOps for the container system drive (Windows only)
   * @member {Number} iOMaximumIOps
   */
  exports.prototype.iOMaximumIOps = undefined;

  /**
   * Maximum IO in bytes per second for the container system drive (Windows only). 
   * @member {Number} iOMaximumBandwidth
   */
  exports.prototype.iOMaximumBandwidth = undefined;


  return exports;

}));
