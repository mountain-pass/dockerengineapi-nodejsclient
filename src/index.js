/**
 * Docker Engine API
 * The Engine API is an HTTP API served by Docker Engine. It is the API the Docker client uses to communicate with the Engine, so everything the Docker client can do can be done with the API.  Most of the client's commands map directly to API endpoints (e.g. `docker ps` is `GET /containers/json`). The notable exception is running containers, which consists of several API calls.  # Errors  The API uses standard HTTP status codes to indicate the success or failure of the API call. The body of the response will be JSON in the following format:  ``` {   \"message\": \"page not found\" } ```  # Versioning  The API is usually changed in each release, so API calls are versioned to ensure that clients don't break. To lock to a specific version of the API, you prefix the URL with its version, for example, call `/v1.30/info` to use the v1.30 version of the `/info` endpoint. If the API version specified in the URL is not supported by the daemon, a HTTP `400 Bad Request` error message is returned.  If you omit the version-prefix, the current version of the API (v1.41) is used. For example, calling `/info` is the same as calling `/v1.41/info`. Using the API without a version-prefix is deprecated and will be removed in a future release.  Engine releases in the near future should support this version of the API, so your client will continue to work even if it is talking to a newer Engine.  The API uses an open schema model, which means server may add extra properties to responses. Likewise, the server will ignore any extra query parameters and request body properties. When you write clients, you need to ignore additional properties in responses to ensure they do not break when talking to newer daemons.   # Authentication  Authentication for registries is handled client side. The client has to send authentication details to various endpoints that need to communicate with registries, such as `POST /images/(name)/push`. These are sent as `X-Registry-Auth` header as a [base64url encoded](https://tools.ietf.org/html/rfc4648#section-5) (JSON) string with the following structure:  ``` {   \"username\": \"string\",   \"password\": \"string\",   \"email\": \"string\",   \"serveraddress\": \"string\" } ```  The `serveraddress` is a domain/IP without a protocol. Throughout this structure, double quotes are required.  If you have already got an identity token from the [`/auth` endpoint](#operation/SystemAuth), you can just pass this instead of credentials:  ``` {   \"identitytoken\": \"9cbaf023786cd7...\" } ``` 
 *
 * The version of the OpenAPI document: 1.41
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Address from './model/Address';
import AuthConfig from './model/AuthConfig';
import BuildCache from './model/BuildCache';
import BuildInfo from './model/BuildInfo';
import BuildPruneResponse from './model/BuildPruneResponse';
import ClusterInfo from './model/ClusterInfo';
import Commit from './model/Commit';
import Config from './model/Config';
import ConfigSpec from './model/ConfigSpec';
import ContainerChangeResponseItem from './model/ContainerChangeResponseItem';
import ContainerConfig from './model/ContainerConfig';
import ContainerCreateResponse from './model/ContainerCreateResponse';
import ContainerInspectResponse from './model/ContainerInspectResponse';
import ContainerPruneResponse from './model/ContainerPruneResponse';
import ContainerState from './model/ContainerState';
import ContainerTopResponse from './model/ContainerTopResponse';
import ContainerUpdateResponse from './model/ContainerUpdateResponse';
import ContainerWaitResponse from './model/ContainerWaitResponse';
import ContainerWaitResponseError from './model/ContainerWaitResponseError';
import CreateImageInfo from './model/CreateImageInfo';
import DeviceMapping from './model/DeviceMapping';
import DeviceRequest from './model/DeviceRequest';
import DistributionInspectResponse from './model/DistributionInspectResponse';
import DistributionInspectResponseDescriptor from './model/DistributionInspectResponseDescriptor';
import DistributionInspectResponsePlatforms from './model/DistributionInspectResponsePlatforms';
import Driver from './model/Driver';
import EndpointIPAMConfig from './model/EndpointIPAMConfig';
import EndpointPortConfig from './model/EndpointPortConfig';
import EndpointSettings from './model/EndpointSettings';
import EndpointSpec from './model/EndpointSpec';
import EngineDescription from './model/EngineDescription';
import EngineDescriptionPlugins from './model/EngineDescriptionPlugins';
import ErrorDetail from './model/ErrorDetail';
import ErrorResponse from './model/ErrorResponse';
import ExecInspectResponse from './model/ExecInspectResponse';
import GraphDriverData from './model/GraphDriverData';
import Health from './model/Health';
import HealthConfig from './model/HealthConfig';
import HealthcheckResult from './model/HealthcheckResult';
import HistoryResponseItem from './model/HistoryResponseItem';
import HostConfig from './model/HostConfig';
import HostConfigAllOf from './model/HostConfigAllOf';
import HostConfigAllOfLogConfig from './model/HostConfigAllOfLogConfig';
import IPAM from './model/IPAM';
import IdResponse from './model/IdResponse';
import Image from './model/Image';
import ImageDeleteResponseItem from './model/ImageDeleteResponseItem';
import ImageID from './model/ImageID';
import ImageMetadata from './model/ImageMetadata';
import ImagePruneResponse from './model/ImagePruneResponse';
import ImageRootFS from './model/ImageRootFS';
import ImageSearchResponseItem from './model/ImageSearchResponseItem';
import ImageSummary from './model/ImageSummary';
import IndexInfo from './model/IndexInfo';
import InlineObject from './model/InlineObject';
import InlineObject1 from './model/InlineObject1';
import InlineObject2 from './model/InlineObject2';
import InlineObject3 from './model/InlineObject3';
import InlineObject4 from './model/InlineObject4';
import InlineObject5 from './model/InlineObject5';
import InlineObject6 from './model/InlineObject6';
import InlineObject7 from './model/InlineObject7';
import InlineResponse400 from './model/InlineResponse400';
import JoinTokens from './model/JoinTokens';
import Limit from './model/Limit';
import LocalNodeState from './model/LocalNodeState';
import ManagerStatus from './model/ManagerStatus';
import Mount from './model/Mount';
import MountBindOptions from './model/MountBindOptions';
import MountPoint from './model/MountPoint';
import MountTmpfsOptions from './model/MountTmpfsOptions';
import MountVolumeOptions from './model/MountVolumeOptions';
import MountVolumeOptionsDriverConfig from './model/MountVolumeOptionsDriverConfig';
import Network from './model/Network';
import NetworkAttachmentConfig from './model/NetworkAttachmentConfig';
import NetworkContainer from './model/NetworkContainer';
import NetworkCreateResponse from './model/NetworkCreateResponse';
import NetworkPruneResponse from './model/NetworkPruneResponse';
import NetworkSettings from './model/NetworkSettings';
import NetworkingConfig from './model/NetworkingConfig';
import Node from './model/Node';
import NodeDescription from './model/NodeDescription';
import NodeSpec from './model/NodeSpec';
import NodeState from './model/NodeState';
import NodeStatus from './model/NodeStatus';
import ObjectVersion from './model/ObjectVersion';
import PeerNode from './model/PeerNode';
import Platform from './model/Platform';
import Plugin from './model/Plugin';
import PluginConfig from './model/PluginConfig';
import PluginConfigArgs from './model/PluginConfigArgs';
import PluginConfigInterface from './model/PluginConfigInterface';
import PluginConfigLinux from './model/PluginConfigLinux';
import PluginConfigNetwork from './model/PluginConfigNetwork';
import PluginConfigRootfs from './model/PluginConfigRootfs';
import PluginConfigUser from './model/PluginConfigUser';
import PluginDevice from './model/PluginDevice';
import PluginEnv from './model/PluginEnv';
import PluginInterfaceType from './model/PluginInterfaceType';
import PluginMount from './model/PluginMount';
import PluginPrivilegeItem from './model/PluginPrivilegeItem';
import PluginSettings from './model/PluginSettings';
import PluginsInfo from './model/PluginsInfo';
import Port from './model/Port';
import PortBinding from './model/PortBinding';
import ProcessConfig from './model/ProcessConfig';
import ProgressDetail from './model/ProgressDetail';
import PushImageInfo from './model/PushImageInfo';
import Reachability from './model/Reachability';
import RegistryServiceConfig from './model/RegistryServiceConfig';
import ResourceObject from './model/ResourceObject';
import Resources from './model/Resources';
import ResourcesBlkioWeightDevice from './model/ResourcesBlkioWeightDevice';
import ResourcesUlimits from './model/ResourcesUlimits';
import RestartPolicy from './model/RestartPolicy';
import Runtime from './model/Runtime';
import Secret from './model/Secret';
import SecretSpec from './model/SecretSpec';
import Service from './model/Service';
import ServiceCreateResponse from './model/ServiceCreateResponse';
import ServiceEndpoint from './model/ServiceEndpoint';
import ServiceEndpointVirtualIPs from './model/ServiceEndpointVirtualIPs';
import ServiceJobStatus from './model/ServiceJobStatus';
import ServiceServiceStatus from './model/ServiceServiceStatus';
import ServiceSpec from './model/ServiceSpec';
import ServiceSpecMode from './model/ServiceSpecMode';
import ServiceSpecModeReplicated from './model/ServiceSpecModeReplicated';
import ServiceSpecModeReplicatedJob from './model/ServiceSpecModeReplicatedJob';
import ServiceSpecRollbackConfig from './model/ServiceSpecRollbackConfig';
import ServiceSpecUpdateConfig from './model/ServiceSpecUpdateConfig';
import ServiceUpdateResponse from './model/ServiceUpdateResponse';
import ServiceUpdateStatus from './model/ServiceUpdateStatus';
import Swarm from './model/Swarm';
import SwarmAllOf from './model/SwarmAllOf';
import SwarmInfo from './model/SwarmInfo';
import SwarmSpec from './model/SwarmSpec';
import SwarmSpecCAConfig from './model/SwarmSpecCAConfig';
import SwarmSpecCAConfigExternalCAs from './model/SwarmSpecCAConfigExternalCAs';
import SwarmSpecDispatcher from './model/SwarmSpecDispatcher';
import SwarmSpecEncryptionConfig from './model/SwarmSpecEncryptionConfig';
import SwarmSpecOrchestration from './model/SwarmSpecOrchestration';
import SwarmSpecRaft from './model/SwarmSpecRaft';
import SwarmSpecTaskDefaults from './model/SwarmSpecTaskDefaults';
import SwarmSpecTaskDefaultsLogDriver from './model/SwarmSpecTaskDefaultsLogDriver';
import SystemAuthResponse from './model/SystemAuthResponse';
import SystemDataUsageResponse from './model/SystemDataUsageResponse';
import SystemEventsResponse from './model/SystemEventsResponse';
import SystemEventsResponseActor from './model/SystemEventsResponseActor';
import SystemInfo from './model/SystemInfo';
import SystemInfoDefaultAddressPools from './model/SystemInfoDefaultAddressPools';
import SystemVersion from './model/SystemVersion';
import SystemVersionComponents from './model/SystemVersionComponents';
import SystemVersionPlatform from './model/SystemVersionPlatform';
import TLSInfo from './model/TLSInfo';
import Task from './model/Task';
import TaskSpec from './model/TaskSpec';
import TaskSpecContainerSpec from './model/TaskSpecContainerSpec';
import TaskSpecContainerSpecConfigs from './model/TaskSpecContainerSpecConfigs';
import TaskSpecContainerSpecDNSConfig from './model/TaskSpecContainerSpecDNSConfig';
import TaskSpecContainerSpecFile from './model/TaskSpecContainerSpecFile';
import TaskSpecContainerSpecFile1 from './model/TaskSpecContainerSpecFile1';
import TaskSpecContainerSpecPrivileges from './model/TaskSpecContainerSpecPrivileges';
import TaskSpecContainerSpecPrivilegesCredentialSpec from './model/TaskSpecContainerSpecPrivilegesCredentialSpec';
import TaskSpecContainerSpecPrivilegesSELinuxContext from './model/TaskSpecContainerSpecPrivilegesSELinuxContext';
import TaskSpecContainerSpecSecrets from './model/TaskSpecContainerSpecSecrets';
import TaskSpecLogDriver from './model/TaskSpecLogDriver';
import TaskSpecNetworkAttachmentSpec from './model/TaskSpecNetworkAttachmentSpec';
import TaskSpecPlacement from './model/TaskSpecPlacement';
import TaskSpecPlacementPreferences from './model/TaskSpecPlacementPreferences';
import TaskSpecPlacementSpread from './model/TaskSpecPlacementSpread';
import TaskSpecPluginSpec from './model/TaskSpecPluginSpec';
import TaskSpecResources from './model/TaskSpecResources';
import TaskSpecRestartPolicy from './model/TaskSpecRestartPolicy';
import TaskState from './model/TaskState';
import TaskStatus from './model/TaskStatus';
import TaskStatusContainerStatus from './model/TaskStatusContainerStatus';
import ThrottleDevice from './model/ThrottleDevice';
import UnlockKeyResponse from './model/UnlockKeyResponse';
import Volume from './model/Volume';
import VolumeConfig from './model/VolumeConfig';
import VolumeListResponse from './model/VolumeListResponse';
import VolumePruneResponse from './model/VolumePruneResponse';
import VolumeUsageData from './model/VolumeUsageData';
import ConfigApi from './api/ConfigApi';
import ContainerApi from './api/ContainerApi';
import DistributionApi from './api/DistributionApi';
import ExecApi from './api/ExecApi';
import ImageApi from './api/ImageApi';
import NetworkApi from './api/NetworkApi';
import NodeApi from './api/NodeApi';
import PluginApi from './api/PluginApi';
import SecretApi from './api/SecretApi';
import ServiceApi from './api/ServiceApi';
import SessionApi from './api/SessionApi';
import SwarmApi from './api/SwarmApi';
import SystemApi from './api/SystemApi';
import TaskApi from './api/TaskApi';
import VolumeApi from './api/VolumeApi';


/**
* The_Engine_API_is_an_HTTP_API_served_by_Docker_Engine__It_is_the_API_theDocker_client_uses_to_communicate_with_the_Engine_so_everything_the_Dockerclient_can_do_can_be_done_with_the_API_Most_of_the_clients_commands_map_directly_to_API_endpoints__e_g__docker_psis_GET__containers_json__The_notable_exception_is_running_containerswhich_consists_of_several_API_calls__ErrorsThe_API_uses_standard_HTTP_status_codes_to_indicate_the_success_or_failureof_the_API_call__The_body_of_the_response_will_be_JSON_in_the_followingformat__message_page_not_found_VersioningThe_API_is_usually_changed_in_each_release_so_API_calls_are_versioned_toensure_that_clients_dont_break__To_lock_to_a_specific_version_of_the_APIyou_prefix_the_URL_with_its_version_for_example_call__v1_30_info_to_usethe_v1_30_version_of_the__info_endpoint__If_the_API_version_specified_inthe_URL_is_not_supported_by_the_daemon_a_HTTP_400_Bad_Request_error_messageis_returned_If_you_omit_the_version_prefix_the_current_version_of_the_API__v1_41_is_used_For_example_calling__info_is_the_same_as_calling__v1_41_info__Using_theAPI_without_a_version_prefix_is_deprecated_and_will_be_removed_in_a_future_release_Engine_releases_in_the_near_future_should_support_this_version_of_the_APIso_your_client_will_continue_to_work_even_if_it_is_talking_to_a_newer_Engine_The_API_uses_an_open_schema_model_which_means_server_may_add_extra_propertiesto_responses__Likewise_the_server_will_ignore_any_extra_query_parameters_andrequest_body_properties__When_you_write_clients_you_need_to_ignore_additionalproperties_in_responses_to_ensure_they_do_not_break_when_talking_to_newerdaemons__AuthenticationAuthentication_for_registries_is_handled_client_side__The_client_has_to_sendauthentication_details_to_various_endpoints_that_need_to_communicate_withregistries_such_as_POST__images__name_push__These_are_sent_asX_Registry_Auth_header_as_a__base64url_encoded_https__tools_ietf_org_html_rfc4648section_5_JSON_string_with_the_following_structure__username_string__password_string__email_string__serveraddress_stringThe_serveraddress_is_a_domain_IP_without_a_protocol__Throughout_thisstructure_double_quotes_are_required_If_you_have_already_got_an_identity_token_from_the___auth_endpoint_operation_SystemAuthyou_can_just_pass_this_instead_of_credentials__identitytoken_9cbaf023786cd7___.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var DockerEngineApi = require('index'); // See note below*.
* var xxxSvc = new DockerEngineApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new DockerEngineApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new DockerEngineApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new DockerEngineApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.41
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The AuthConfig model constructor.
     * @property {module:model/AuthConfig}
     */
    AuthConfig,

    /**
     * The BuildCache model constructor.
     * @property {module:model/BuildCache}
     */
    BuildCache,

    /**
     * The BuildInfo model constructor.
     * @property {module:model/BuildInfo}
     */
    BuildInfo,

    /**
     * The BuildPruneResponse model constructor.
     * @property {module:model/BuildPruneResponse}
     */
    BuildPruneResponse,

    /**
     * The ClusterInfo model constructor.
     * @property {module:model/ClusterInfo}
     */
    ClusterInfo,

    /**
     * The Commit model constructor.
     * @property {module:model/Commit}
     */
    Commit,

    /**
     * The Config model constructor.
     * @property {module:model/Config}
     */
    Config,

    /**
     * The ConfigSpec model constructor.
     * @property {module:model/ConfigSpec}
     */
    ConfigSpec,

    /**
     * The ContainerChangeResponseItem model constructor.
     * @property {module:model/ContainerChangeResponseItem}
     */
    ContainerChangeResponseItem,

    /**
     * The ContainerConfig model constructor.
     * @property {module:model/ContainerConfig}
     */
    ContainerConfig,

    /**
     * The ContainerCreateResponse model constructor.
     * @property {module:model/ContainerCreateResponse}
     */
    ContainerCreateResponse,

    /**
     * The ContainerInspectResponse model constructor.
     * @property {module:model/ContainerInspectResponse}
     */
    ContainerInspectResponse,

    /**
     * The ContainerPruneResponse model constructor.
     * @property {module:model/ContainerPruneResponse}
     */
    ContainerPruneResponse,

    /**
     * The ContainerState model constructor.
     * @property {module:model/ContainerState}
     */
    ContainerState,

    /**
     * The ContainerTopResponse model constructor.
     * @property {module:model/ContainerTopResponse}
     */
    ContainerTopResponse,

    /**
     * The ContainerUpdateResponse model constructor.
     * @property {module:model/ContainerUpdateResponse}
     */
    ContainerUpdateResponse,

    /**
     * The ContainerWaitResponse model constructor.
     * @property {module:model/ContainerWaitResponse}
     */
    ContainerWaitResponse,

    /**
     * The ContainerWaitResponseError model constructor.
     * @property {module:model/ContainerWaitResponseError}
     */
    ContainerWaitResponseError,

    /**
     * The CreateImageInfo model constructor.
     * @property {module:model/CreateImageInfo}
     */
    CreateImageInfo,

    /**
     * The DeviceMapping model constructor.
     * @property {module:model/DeviceMapping}
     */
    DeviceMapping,

    /**
     * The DeviceRequest model constructor.
     * @property {module:model/DeviceRequest}
     */
    DeviceRequest,

    /**
     * The DistributionInspectResponse model constructor.
     * @property {module:model/DistributionInspectResponse}
     */
    DistributionInspectResponse,

    /**
     * The DistributionInspectResponseDescriptor model constructor.
     * @property {module:model/DistributionInspectResponseDescriptor}
     */
    DistributionInspectResponseDescriptor,

    /**
     * The DistributionInspectResponsePlatforms model constructor.
     * @property {module:model/DistributionInspectResponsePlatforms}
     */
    DistributionInspectResponsePlatforms,

    /**
     * The Driver model constructor.
     * @property {module:model/Driver}
     */
    Driver,

    /**
     * The EndpointIPAMConfig model constructor.
     * @property {module:model/EndpointIPAMConfig}
     */
    EndpointIPAMConfig,

    /**
     * The EndpointPortConfig model constructor.
     * @property {module:model/EndpointPortConfig}
     */
    EndpointPortConfig,

    /**
     * The EndpointSettings model constructor.
     * @property {module:model/EndpointSettings}
     */
    EndpointSettings,

    /**
     * The EndpointSpec model constructor.
     * @property {module:model/EndpointSpec}
     */
    EndpointSpec,

    /**
     * The EngineDescription model constructor.
     * @property {module:model/EngineDescription}
     */
    EngineDescription,

    /**
     * The EngineDescriptionPlugins model constructor.
     * @property {module:model/EngineDescriptionPlugins}
     */
    EngineDescriptionPlugins,

    /**
     * The ErrorDetail model constructor.
     * @property {module:model/ErrorDetail}
     */
    ErrorDetail,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The ExecInspectResponse model constructor.
     * @property {module:model/ExecInspectResponse}
     */
    ExecInspectResponse,

    /**
     * The GraphDriverData model constructor.
     * @property {module:model/GraphDriverData}
     */
    GraphDriverData,

    /**
     * The Health model constructor.
     * @property {module:model/Health}
     */
    Health,

    /**
     * The HealthConfig model constructor.
     * @property {module:model/HealthConfig}
     */
    HealthConfig,

    /**
     * The HealthcheckResult model constructor.
     * @property {module:model/HealthcheckResult}
     */
    HealthcheckResult,

    /**
     * The HistoryResponseItem model constructor.
     * @property {module:model/HistoryResponseItem}
     */
    HistoryResponseItem,

    /**
     * The HostConfig model constructor.
     * @property {module:model/HostConfig}
     */
    HostConfig,

    /**
     * The HostConfigAllOf model constructor.
     * @property {module:model/HostConfigAllOf}
     */
    HostConfigAllOf,

    /**
     * The HostConfigAllOfLogConfig model constructor.
     * @property {module:model/HostConfigAllOfLogConfig}
     */
    HostConfigAllOfLogConfig,

    /**
     * The IPAM model constructor.
     * @property {module:model/IPAM}
     */
    IPAM,

    /**
     * The IdResponse model constructor.
     * @property {module:model/IdResponse}
     */
    IdResponse,

    /**
     * The Image model constructor.
     * @property {module:model/Image}
     */
    Image,

    /**
     * The ImageDeleteResponseItem model constructor.
     * @property {module:model/ImageDeleteResponseItem}
     */
    ImageDeleteResponseItem,

    /**
     * The ImageID model constructor.
     * @property {module:model/ImageID}
     */
    ImageID,

    /**
     * The ImageMetadata model constructor.
     * @property {module:model/ImageMetadata}
     */
    ImageMetadata,

    /**
     * The ImagePruneResponse model constructor.
     * @property {module:model/ImagePruneResponse}
     */
    ImagePruneResponse,

    /**
     * The ImageRootFS model constructor.
     * @property {module:model/ImageRootFS}
     */
    ImageRootFS,

    /**
     * The ImageSearchResponseItem model constructor.
     * @property {module:model/ImageSearchResponseItem}
     */
    ImageSearchResponseItem,

    /**
     * The ImageSummary model constructor.
     * @property {module:model/ImageSummary}
     */
    ImageSummary,

    /**
     * The IndexInfo model constructor.
     * @property {module:model/IndexInfo}
     */
    IndexInfo,

    /**
     * The InlineObject model constructor.
     * @property {module:model/InlineObject}
     */
    InlineObject,

    /**
     * The InlineObject1 model constructor.
     * @property {module:model/InlineObject1}
     */
    InlineObject1,

    /**
     * The InlineObject2 model constructor.
     * @property {module:model/InlineObject2}
     */
    InlineObject2,

    /**
     * The InlineObject3 model constructor.
     * @property {module:model/InlineObject3}
     */
    InlineObject3,

    /**
     * The InlineObject4 model constructor.
     * @property {module:model/InlineObject4}
     */
    InlineObject4,

    /**
     * The InlineObject5 model constructor.
     * @property {module:model/InlineObject5}
     */
    InlineObject5,

    /**
     * The InlineObject6 model constructor.
     * @property {module:model/InlineObject6}
     */
    InlineObject6,

    /**
     * The InlineObject7 model constructor.
     * @property {module:model/InlineObject7}
     */
    InlineObject7,

    /**
     * The InlineResponse400 model constructor.
     * @property {module:model/InlineResponse400}
     */
    InlineResponse400,

    /**
     * The JoinTokens model constructor.
     * @property {module:model/JoinTokens}
     */
    JoinTokens,

    /**
     * The Limit model constructor.
     * @property {module:model/Limit}
     */
    Limit,

    /**
     * The LocalNodeState model constructor.
     * @property {module:model/LocalNodeState}
     */
    LocalNodeState,

    /**
     * The ManagerStatus model constructor.
     * @property {module:model/ManagerStatus}
     */
    ManagerStatus,

    /**
     * The Mount model constructor.
     * @property {module:model/Mount}
     */
    Mount,

    /**
     * The MountBindOptions model constructor.
     * @property {module:model/MountBindOptions}
     */
    MountBindOptions,

    /**
     * The MountPoint model constructor.
     * @property {module:model/MountPoint}
     */
    MountPoint,

    /**
     * The MountTmpfsOptions model constructor.
     * @property {module:model/MountTmpfsOptions}
     */
    MountTmpfsOptions,

    /**
     * The MountVolumeOptions model constructor.
     * @property {module:model/MountVolumeOptions}
     */
    MountVolumeOptions,

    /**
     * The MountVolumeOptionsDriverConfig model constructor.
     * @property {module:model/MountVolumeOptionsDriverConfig}
     */
    MountVolumeOptionsDriverConfig,

    /**
     * The Network model constructor.
     * @property {module:model/Network}
     */
    Network,

    /**
     * The NetworkAttachmentConfig model constructor.
     * @property {module:model/NetworkAttachmentConfig}
     */
    NetworkAttachmentConfig,

    /**
     * The NetworkContainer model constructor.
     * @property {module:model/NetworkContainer}
     */
    NetworkContainer,

    /**
     * The NetworkCreateResponse model constructor.
     * @property {module:model/NetworkCreateResponse}
     */
    NetworkCreateResponse,

    /**
     * The NetworkPruneResponse model constructor.
     * @property {module:model/NetworkPruneResponse}
     */
    NetworkPruneResponse,

    /**
     * The NetworkSettings model constructor.
     * @property {module:model/NetworkSettings}
     */
    NetworkSettings,

    /**
     * The NetworkingConfig model constructor.
     * @property {module:model/NetworkingConfig}
     */
    NetworkingConfig,

    /**
     * The Node model constructor.
     * @property {module:model/Node}
     */
    Node,

    /**
     * The NodeDescription model constructor.
     * @property {module:model/NodeDescription}
     */
    NodeDescription,

    /**
     * The NodeSpec model constructor.
     * @property {module:model/NodeSpec}
     */
    NodeSpec,

    /**
     * The NodeState model constructor.
     * @property {module:model/NodeState}
     */
    NodeState,

    /**
     * The NodeStatus model constructor.
     * @property {module:model/NodeStatus}
     */
    NodeStatus,

    /**
     * The ObjectVersion model constructor.
     * @property {module:model/ObjectVersion}
     */
    ObjectVersion,

    /**
     * The PeerNode model constructor.
     * @property {module:model/PeerNode}
     */
    PeerNode,

    /**
     * The Platform model constructor.
     * @property {module:model/Platform}
     */
    Platform,

    /**
     * The Plugin model constructor.
     * @property {module:model/Plugin}
     */
    Plugin,

    /**
     * The PluginConfig model constructor.
     * @property {module:model/PluginConfig}
     */
    PluginConfig,

    /**
     * The PluginConfigArgs model constructor.
     * @property {module:model/PluginConfigArgs}
     */
    PluginConfigArgs,

    /**
     * The PluginConfigInterface model constructor.
     * @property {module:model/PluginConfigInterface}
     */
    PluginConfigInterface,

    /**
     * The PluginConfigLinux model constructor.
     * @property {module:model/PluginConfigLinux}
     */
    PluginConfigLinux,

    /**
     * The PluginConfigNetwork model constructor.
     * @property {module:model/PluginConfigNetwork}
     */
    PluginConfigNetwork,

    /**
     * The PluginConfigRootfs model constructor.
     * @property {module:model/PluginConfigRootfs}
     */
    PluginConfigRootfs,

    /**
     * The PluginConfigUser model constructor.
     * @property {module:model/PluginConfigUser}
     */
    PluginConfigUser,

    /**
     * The PluginDevice model constructor.
     * @property {module:model/PluginDevice}
     */
    PluginDevice,

    /**
     * The PluginEnv model constructor.
     * @property {module:model/PluginEnv}
     */
    PluginEnv,

    /**
     * The PluginInterfaceType model constructor.
     * @property {module:model/PluginInterfaceType}
     */
    PluginInterfaceType,

    /**
     * The PluginMount model constructor.
     * @property {module:model/PluginMount}
     */
    PluginMount,

    /**
     * The PluginPrivilegeItem model constructor.
     * @property {module:model/PluginPrivilegeItem}
     */
    PluginPrivilegeItem,

    /**
     * The PluginSettings model constructor.
     * @property {module:model/PluginSettings}
     */
    PluginSettings,

    /**
     * The PluginsInfo model constructor.
     * @property {module:model/PluginsInfo}
     */
    PluginsInfo,

    /**
     * The Port model constructor.
     * @property {module:model/Port}
     */
    Port,

    /**
     * The PortBinding model constructor.
     * @property {module:model/PortBinding}
     */
    PortBinding,

    /**
     * The ProcessConfig model constructor.
     * @property {module:model/ProcessConfig}
     */
    ProcessConfig,

    /**
     * The ProgressDetail model constructor.
     * @property {module:model/ProgressDetail}
     */
    ProgressDetail,

    /**
     * The PushImageInfo model constructor.
     * @property {module:model/PushImageInfo}
     */
    PushImageInfo,

    /**
     * The Reachability model constructor.
     * @property {module:model/Reachability}
     */
    Reachability,

    /**
     * The RegistryServiceConfig model constructor.
     * @property {module:model/RegistryServiceConfig}
     */
    RegistryServiceConfig,

    /**
     * The ResourceObject model constructor.
     * @property {module:model/ResourceObject}
     */
    ResourceObject,

    /**
     * The Resources model constructor.
     * @property {module:model/Resources}
     */
    Resources,

    /**
     * The ResourcesBlkioWeightDevice model constructor.
     * @property {module:model/ResourcesBlkioWeightDevice}
     */
    ResourcesBlkioWeightDevice,

    /**
     * The ResourcesUlimits model constructor.
     * @property {module:model/ResourcesUlimits}
     */
    ResourcesUlimits,

    /**
     * The RestartPolicy model constructor.
     * @property {module:model/RestartPolicy}
     */
    RestartPolicy,

    /**
     * The Runtime model constructor.
     * @property {module:model/Runtime}
     */
    Runtime,

    /**
     * The Secret model constructor.
     * @property {module:model/Secret}
     */
    Secret,

    /**
     * The SecretSpec model constructor.
     * @property {module:model/SecretSpec}
     */
    SecretSpec,

    /**
     * The Service model constructor.
     * @property {module:model/Service}
     */
    Service,

    /**
     * The ServiceCreateResponse model constructor.
     * @property {module:model/ServiceCreateResponse}
     */
    ServiceCreateResponse,

    /**
     * The ServiceEndpoint model constructor.
     * @property {module:model/ServiceEndpoint}
     */
    ServiceEndpoint,

    /**
     * The ServiceEndpointVirtualIPs model constructor.
     * @property {module:model/ServiceEndpointVirtualIPs}
     */
    ServiceEndpointVirtualIPs,

    /**
     * The ServiceJobStatus model constructor.
     * @property {module:model/ServiceJobStatus}
     */
    ServiceJobStatus,

    /**
     * The ServiceServiceStatus model constructor.
     * @property {module:model/ServiceServiceStatus}
     */
    ServiceServiceStatus,

    /**
     * The ServiceSpec model constructor.
     * @property {module:model/ServiceSpec}
     */
    ServiceSpec,

    /**
     * The ServiceSpecMode model constructor.
     * @property {module:model/ServiceSpecMode}
     */
    ServiceSpecMode,

    /**
     * The ServiceSpecModeReplicated model constructor.
     * @property {module:model/ServiceSpecModeReplicated}
     */
    ServiceSpecModeReplicated,

    /**
     * The ServiceSpecModeReplicatedJob model constructor.
     * @property {module:model/ServiceSpecModeReplicatedJob}
     */
    ServiceSpecModeReplicatedJob,

    /**
     * The ServiceSpecRollbackConfig model constructor.
     * @property {module:model/ServiceSpecRollbackConfig}
     */
    ServiceSpecRollbackConfig,

    /**
     * The ServiceSpecUpdateConfig model constructor.
     * @property {module:model/ServiceSpecUpdateConfig}
     */
    ServiceSpecUpdateConfig,

    /**
     * The ServiceUpdateResponse model constructor.
     * @property {module:model/ServiceUpdateResponse}
     */
    ServiceUpdateResponse,

    /**
     * The ServiceUpdateStatus model constructor.
     * @property {module:model/ServiceUpdateStatus}
     */
    ServiceUpdateStatus,

    /**
     * The Swarm model constructor.
     * @property {module:model/Swarm}
     */
    Swarm,

    /**
     * The SwarmAllOf model constructor.
     * @property {module:model/SwarmAllOf}
     */
    SwarmAllOf,

    /**
     * The SwarmInfo model constructor.
     * @property {module:model/SwarmInfo}
     */
    SwarmInfo,

    /**
     * The SwarmSpec model constructor.
     * @property {module:model/SwarmSpec}
     */
    SwarmSpec,

    /**
     * The SwarmSpecCAConfig model constructor.
     * @property {module:model/SwarmSpecCAConfig}
     */
    SwarmSpecCAConfig,

    /**
     * The SwarmSpecCAConfigExternalCAs model constructor.
     * @property {module:model/SwarmSpecCAConfigExternalCAs}
     */
    SwarmSpecCAConfigExternalCAs,

    /**
     * The SwarmSpecDispatcher model constructor.
     * @property {module:model/SwarmSpecDispatcher}
     */
    SwarmSpecDispatcher,

    /**
     * The SwarmSpecEncryptionConfig model constructor.
     * @property {module:model/SwarmSpecEncryptionConfig}
     */
    SwarmSpecEncryptionConfig,

    /**
     * The SwarmSpecOrchestration model constructor.
     * @property {module:model/SwarmSpecOrchestration}
     */
    SwarmSpecOrchestration,

    /**
     * The SwarmSpecRaft model constructor.
     * @property {module:model/SwarmSpecRaft}
     */
    SwarmSpecRaft,

    /**
     * The SwarmSpecTaskDefaults model constructor.
     * @property {module:model/SwarmSpecTaskDefaults}
     */
    SwarmSpecTaskDefaults,

    /**
     * The SwarmSpecTaskDefaultsLogDriver model constructor.
     * @property {module:model/SwarmSpecTaskDefaultsLogDriver}
     */
    SwarmSpecTaskDefaultsLogDriver,

    /**
     * The SystemAuthResponse model constructor.
     * @property {module:model/SystemAuthResponse}
     */
    SystemAuthResponse,

    /**
     * The SystemDataUsageResponse model constructor.
     * @property {module:model/SystemDataUsageResponse}
     */
    SystemDataUsageResponse,

    /**
     * The SystemEventsResponse model constructor.
     * @property {module:model/SystemEventsResponse}
     */
    SystemEventsResponse,

    /**
     * The SystemEventsResponseActor model constructor.
     * @property {module:model/SystemEventsResponseActor}
     */
    SystemEventsResponseActor,

    /**
     * The SystemInfo model constructor.
     * @property {module:model/SystemInfo}
     */
    SystemInfo,

    /**
     * The SystemInfoDefaultAddressPools model constructor.
     * @property {module:model/SystemInfoDefaultAddressPools}
     */
    SystemInfoDefaultAddressPools,

    /**
     * The SystemVersion model constructor.
     * @property {module:model/SystemVersion}
     */
    SystemVersion,

    /**
     * The SystemVersionComponents model constructor.
     * @property {module:model/SystemVersionComponents}
     */
    SystemVersionComponents,

    /**
     * The SystemVersionPlatform model constructor.
     * @property {module:model/SystemVersionPlatform}
     */
    SystemVersionPlatform,

    /**
     * The TLSInfo model constructor.
     * @property {module:model/TLSInfo}
     */
    TLSInfo,

    /**
     * The Task model constructor.
     * @property {module:model/Task}
     */
    Task,

    /**
     * The TaskSpec model constructor.
     * @property {module:model/TaskSpec}
     */
    TaskSpec,

    /**
     * The TaskSpecContainerSpec model constructor.
     * @property {module:model/TaskSpecContainerSpec}
     */
    TaskSpecContainerSpec,

    /**
     * The TaskSpecContainerSpecConfigs model constructor.
     * @property {module:model/TaskSpecContainerSpecConfigs}
     */
    TaskSpecContainerSpecConfigs,

    /**
     * The TaskSpecContainerSpecDNSConfig model constructor.
     * @property {module:model/TaskSpecContainerSpecDNSConfig}
     */
    TaskSpecContainerSpecDNSConfig,

    /**
     * The TaskSpecContainerSpecFile model constructor.
     * @property {module:model/TaskSpecContainerSpecFile}
     */
    TaskSpecContainerSpecFile,

    /**
     * The TaskSpecContainerSpecFile1 model constructor.
     * @property {module:model/TaskSpecContainerSpecFile1}
     */
    TaskSpecContainerSpecFile1,

    /**
     * The TaskSpecContainerSpecPrivileges model constructor.
     * @property {module:model/TaskSpecContainerSpecPrivileges}
     */
    TaskSpecContainerSpecPrivileges,

    /**
     * The TaskSpecContainerSpecPrivilegesCredentialSpec model constructor.
     * @property {module:model/TaskSpecContainerSpecPrivilegesCredentialSpec}
     */
    TaskSpecContainerSpecPrivilegesCredentialSpec,

    /**
     * The TaskSpecContainerSpecPrivilegesSELinuxContext model constructor.
     * @property {module:model/TaskSpecContainerSpecPrivilegesSELinuxContext}
     */
    TaskSpecContainerSpecPrivilegesSELinuxContext,

    /**
     * The TaskSpecContainerSpecSecrets model constructor.
     * @property {module:model/TaskSpecContainerSpecSecrets}
     */
    TaskSpecContainerSpecSecrets,

    /**
     * The TaskSpecLogDriver model constructor.
     * @property {module:model/TaskSpecLogDriver}
     */
    TaskSpecLogDriver,

    /**
     * The TaskSpecNetworkAttachmentSpec model constructor.
     * @property {module:model/TaskSpecNetworkAttachmentSpec}
     */
    TaskSpecNetworkAttachmentSpec,

    /**
     * The TaskSpecPlacement model constructor.
     * @property {module:model/TaskSpecPlacement}
     */
    TaskSpecPlacement,

    /**
     * The TaskSpecPlacementPreferences model constructor.
     * @property {module:model/TaskSpecPlacementPreferences}
     */
    TaskSpecPlacementPreferences,

    /**
     * The TaskSpecPlacementSpread model constructor.
     * @property {module:model/TaskSpecPlacementSpread}
     */
    TaskSpecPlacementSpread,

    /**
     * The TaskSpecPluginSpec model constructor.
     * @property {module:model/TaskSpecPluginSpec}
     */
    TaskSpecPluginSpec,

    /**
     * The TaskSpecResources model constructor.
     * @property {module:model/TaskSpecResources}
     */
    TaskSpecResources,

    /**
     * The TaskSpecRestartPolicy model constructor.
     * @property {module:model/TaskSpecRestartPolicy}
     */
    TaskSpecRestartPolicy,

    /**
     * The TaskState model constructor.
     * @property {module:model/TaskState}
     */
    TaskState,

    /**
     * The TaskStatus model constructor.
     * @property {module:model/TaskStatus}
     */
    TaskStatus,

    /**
     * The TaskStatusContainerStatus model constructor.
     * @property {module:model/TaskStatusContainerStatus}
     */
    TaskStatusContainerStatus,

    /**
     * The ThrottleDevice model constructor.
     * @property {module:model/ThrottleDevice}
     */
    ThrottleDevice,

    /**
     * The UnlockKeyResponse model constructor.
     * @property {module:model/UnlockKeyResponse}
     */
    UnlockKeyResponse,

    /**
     * The Volume model constructor.
     * @property {module:model/Volume}
     */
    Volume,

    /**
     * The VolumeConfig model constructor.
     * @property {module:model/VolumeConfig}
     */
    VolumeConfig,

    /**
     * The VolumeListResponse model constructor.
     * @property {module:model/VolumeListResponse}
     */
    VolumeListResponse,

    /**
     * The VolumePruneResponse model constructor.
     * @property {module:model/VolumePruneResponse}
     */
    VolumePruneResponse,

    /**
     * The VolumeUsageData model constructor.
     * @property {module:model/VolumeUsageData}
     */
    VolumeUsageData,

    /**
    * The ConfigApi service constructor.
    * @property {module:api/ConfigApi}
    */
    ConfigApi,

    /**
    * The ContainerApi service constructor.
    * @property {module:api/ContainerApi}
    */
    ContainerApi,

    /**
    * The DistributionApi service constructor.
    * @property {module:api/DistributionApi}
    */
    DistributionApi,

    /**
    * The ExecApi service constructor.
    * @property {module:api/ExecApi}
    */
    ExecApi,

    /**
    * The ImageApi service constructor.
    * @property {module:api/ImageApi}
    */
    ImageApi,

    /**
    * The NetworkApi service constructor.
    * @property {module:api/NetworkApi}
    */
    NetworkApi,

    /**
    * The NodeApi service constructor.
    * @property {module:api/NodeApi}
    */
    NodeApi,

    /**
    * The PluginApi service constructor.
    * @property {module:api/PluginApi}
    */
    PluginApi,

    /**
    * The SecretApi service constructor.
    * @property {module:api/SecretApi}
    */
    SecretApi,

    /**
    * The ServiceApi service constructor.
    * @property {module:api/ServiceApi}
    */
    ServiceApi,

    /**
    * The SessionApi service constructor.
    * @property {module:api/SessionApi}
    */
    SessionApi,

    /**
    * The SwarmApi service constructor.
    * @property {module:api/SwarmApi}
    */
    SwarmApi,

    /**
    * The SystemApi service constructor.
    * @property {module:api/SystemApi}
    */
    SystemApi,

    /**
    * The TaskApi service constructor.
    * @property {module:api/TaskApi}
    */
    TaskApi,

    /**
    * The VolumeApi service constructor.
    * @property {module:api/VolumeApi}
    */
    VolumeApi
};
